name: Manual Release Tag Workflow

on:
  push:
    branches:
      - 'dev/v[0-9].[0-9].[0-9]'
      - 'dev/v[0-9].[0-9].[0-9].[0-9]*'
  workflow_dispatch:

jobs:
  manual-release-tag:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set tag prefix (customize as needed)
        id: set-prefix
        run: |
          # Set your desired prefix here, or use workflow_dispatch inputs for dynamic prefix
          TAG_PREFIX="dev/v2.5.3"
          echo "tag_prefix=$TAG_PREFIX" >> $GITHUB_OUTPUT

      - name: Find latest tag for prefix
        id: find-latest
        run: |
          TAG_PREFIX="${{ steps.set-prefix.outputs.tag_prefix }}"
          TAGS=$(git tag --list "${TAG_PREFIX}*")
          if [ -z "$TAGS" ]; then
            LATEST_TAG="$TAG_PREFIX"
          else
            LATEST_TAG=$(echo "$TAGS" | sort -V | tail -n 1)
          fi
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Calculate new tag version
        id: calculate-tag
        run: |
          TAG_PREFIX="${{ steps.set-prefix.outputs.tag_prefix }}"
          LATEST_TAG="${{ steps.find-latest.outputs.latest_tag }}"
          if [ "$LATEST_TAG" = "$TAG_PREFIX" ]; then
            NEW_TAG="${TAG_PREFIX}.1"
          else
            LAST_PART=$(echo "$LATEST_TAG" | awk -F. '{print $NF}')
            if [[ "$LAST_PART" =~ ^[0-9]+$ ]]; then
              NEXT=$((LAST_PART + 1))
              NEW_TAG="${TAG_PREFIX}.$NEXT"
            else
              NEW_TAG="${TAG_PREFIX}.1"
            fi
          fi
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT
          echo "New tag will be: $NEW_TAG"

      - name: Check if tag already exists
        id: check-tag
        run: |
          NEW_TAG="${{ steps.calculate-tag.outputs.new_tag }}"
          if git tag -l | grep -q "^$NEW_TAG$"; then
            echo "tag_exists=true" >> $GITHUB_OUTPUT
            echo "Tag $NEW_TAG already exists"
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
            echo "Tag $NEW_TAG does not exist, will create it"

      - name: Create and push tag
        if: steps.check-tag.outputs.tag_exists == 'false'
        run: |
          NEW_TAG="${{ steps.calculate-tag.outputs.new_tag }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$NEW_TAG" -m "Auto-release tag $NEW_TAG (manual trigger)"
          git push origin "$NEW_TAG"
          echo "Created and pushed tag: $NEW_TAG"

      - name: Create GitHub Release
        if: steps.check-tag.outputs.tag_exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.calculate-tag.outputs.new_tag }}
          release_name: Release ${{ steps.calculate-tag.outputs.new_tag }}
          body: |
            Automated release created by manual trigger.
            ## Changes
            This release was automatically generated by workflow_dispatch.
          draft: false
          prerelease: true

      - name: Tag already exists
        if: steps.check-tag.outputs.tag_exists == 'true'
        run: |
          echo "Tag ${{ steps.calculate-tag.outputs.new_tag }} already exists. Skipping tag creation."