name: Manual Release Tag

on:
  workflow_dispatch:
    inputs:
      base-branch:
        description: 'Branch to use as tag prefix, e.g. dev/v1.1.1'
        required: true

jobs:
  manual-release-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set tag prefix from input
        id: set-prefix
        run: |
          TAG_PREFIX="pycommon-${{ github.event.inputs.base-branch }}"
          echo "tag_prefix=$TAG_PREFIX" >> $GITHUB_OUTPUT

      - name: Find latest tag for prefix
        id: find-latest
        run: |
          TAG_PREFIX="${{ steps.set-prefix.outputs.tag_prefix }}"
          TAGS=$(git tag --list "${TAG_PREFIX}*")
          if [ -z "$TAGS" ]; then
            LATEST_TAG="$TAG_PREFIX"
          else
            LATEST_TAG=$(echo "$TAGS" | sort -V | tail -n 1)
          fi
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Calculate new tag version
        id: calculate-tag
        run: |
          TAG_PREFIX="${{ steps.set-prefix.outputs.tag_prefix }}"
          TAGS=$(git tag --list "${TAG_PREFIX}*" | sort -V)
          # If no tags exist for the prefix, use the prefix itself
          if [ -z "$TAGS" ]; then
            NEW_TAG="$TAG_PREFIX"
          else
            # Find the highest suffix and increment
            LAST_TAG=$(echo "$TAGS" | tail -n 1)
            # Extract numeric suffix robustly
            SUFFIX=$(echo "$LAST_TAG" | awk -F "$TAG_PREFIX." '{print $2}')
            if [[ "$LAST_TAG" = "$TAG_PREFIX" ]]; then
              NEW_TAG="${TAG_PREFIX}.1"
            elif [[ "$SUFFIX" =~ ^[0-9]+$ ]]; then
              NEXT=$((SUFFIX + 1))
              NEW_TAG="${TAG_PREFIX}.$NEXT"
            else
              NEW_TAG="${TAG_PREFIX}.1"
            fi
          fi
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT
          echo "New tag will be: $NEW_TAG"

      - name: Create and push tag
        run: |
          NEW_TAG="${{ steps.calculate-tag.outputs.new_tag }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$NEW_TAG" -m "$NEW_TAG"
          git push origin "refs/tags/$NEW_TAG"
          echo "Created and pushed tag: $NEW_TAG"

      # Release Drafter step removed; only manual tag and GitHub release are created

      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          tag: ${{ steps.calculate-tag.outputs.new_tag }}

      - name: Create Release
        uses: ncipollo/release-action@v1.12.0
        with:
          allowUpdates: true
          draft: false
          makeLatest: true
          body: ${{ steps.changelog.outputs.changes }}
          token: ${{ github.token }}
          tag: ${{ steps.calculate-tag.outputs.new_tag }}

      - name: Commit CHANGELOG.md
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: main
          commit_message: 'docs: update CHANGELOG.md for ${{ github.ref_name }} [skip ci]'
          file_pattern: CHANGELOG.md
